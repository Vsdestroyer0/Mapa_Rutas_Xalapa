---
/* 
CSR - renderizado del lado del cliente, el server entrtega un HTML vacío y el JS del cliente se encarga de renderizar todo
SSR - renderizado del lado del servidor, el server entrega un HTML completo y el JS del cliente se encarga de hidratarlo
SSG - renderizado estático del lado del servidor, el server genera un HTML estático en tiempo de construcción y lo entrega tal cual al cliente (astro por defecto)
ISR - renderizado estático incremental, el server genera un HTML estático en tiempo de construcción pero lo puede regenerar en tiempo de ejecución (astro con adaptadores)
MPA - aplicación de página múltiple, cada página es un archivo independiente (astro por defecto)
SPA - aplicación de página única, todas las páginas se cargan en un solo archivo y el cliente se encarga de navegar entre ellas (astro con adaptadores)
istlas - isla, una parte de la página se renderiza del lado del servidor y otra parte del lado del cliente (astro por defecto)



*/

export const prerender = false; // SSR en vez de SSG
import MainLayout from "../../layouts/mainLayout.astro";
import Map from "../../components/Map.jsx";
import BusView from "../../components/BusView.astro";
import RouteStats from "../../components/RouteStats.jsx";

interface Ruta {
  _id: string;
  id: number;
  label: string;
  type?: string;
  color?: string;
  points?: [number, number][];
  stops?: any[];
  images?: string[];
}

//  id de la URL
const { id } = Astro.params;

// Determinar base URL según entorno
const baseURL =
  typeof window === "undefined"
    ? import.meta.env.PUBLIC_BACKEND_URL ||
      "https://backend-mapa-production.up.railway.app"
    : "";

// Fetch seguro para SSR y navegador
const res = await fetch(`${baseURL}/api/rutas/${id}`, {
  credentials: "include",
});
if (!res.ok) throw new Error("Ruta no encontrada");

const route = (await res.json()) as Ruta;
---

<MainLayout title={`Ruta ${route.label}`}>
  <section class="space-y-6">
    <h1 class="text-3xl font-bold text-gray-800">{route.label}</h1>

    {route.images?.[0] && <BusView src={route.images[0]} />}
    <RouteStats route={route.stops} client:only="react" />

    <div class="h-[500px] w-full rounded-lg overflow-hidden shadow-md">
      <Map
        client:only="react"
        stops={route.stops || []}
        points={route.points || []}
        color={route.color}
        isCircuit={route.type === "circuit"}
      />
    </div>
  </section>
</MainLayout>
